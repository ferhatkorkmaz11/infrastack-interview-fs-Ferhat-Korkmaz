version: "3.8"

services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-config.yml"]
    ports:
      - "4317:4317"
    volumes:
      - ./collector/otel-config.yml:/etc/otel-config.yml
    env_file:
      - .env
    restart: unless-stopped

  microservice-order:
    build:
      context: ./microservices/order
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - otel-collector
      - microservice-user
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - USER_SERVICE_BASE_URL=http://microservice-user:8080
      - SERVICE_NAME=order-service
      - POD_NAME=order-service-0
      - FAILURE_RATE=0
      - METRICS_ENABLED=true
    restart: unless-stopped

  microservice-payment:
    build:
      context: ./microservices/payment
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - otel-collector
      - microservice-order
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - ORDER_SERVICE_BASE_URL=http://microservice-order:8082
      - SERVICE_NAME=payment-service
      - POD_NAME=payment-service-0
      - FAILURE_RATE=0
      - METRICS_ENABLED=true
    restart: unless-stopped

  microservice-user:
    build:
      context: ./microservices/user
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - otel-collector
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - SERVICE_NAME=user-service
      - POD_NAME=user-service-0
      - FAILURE_RATE=0
      - METRICS_ENABLED=true
    restart: unless-stopped

  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - CLICKHOUSE_HOST=${CLICKHOUSE_ENDPOINT_HTTP}
      - CLICKHOUSE_USER=${CLICKHOUSE_USERNAME}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
      - CLICKHOUSE_DATABASE=${CLICKHOUSE_DATABASE}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NODE_ENV=production
    restart: unless-stopped
